---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2019
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

- name: Get intel_qat version
  ansible.builtin.shell: |
    set -o pipefail
    PATH=$PATH:/usr/sbin/:/sbin/ modinfo intel_qat | grep "^version:" | awk '{ print $2 }'
  args:
    executable: /bin/bash
  register: intel_qat_version
  changed_when: false

- name: Print intel_qat_version value
  ansible.builtin.debug:
    var: intel_qat_version

- name: Clean up
  ansible.builtin.include_tasks: cleanup.yml
  when: intel_qat_version.stdout != qat_driver_version

- name: Bootstrap QAT drivers source code
  ansible.builtin.include_tasks: bootstrap.yml
  when: intel_qat_version.stdout != qat_driver_version

- name: Build QAT drivers source code
  ansible.builtin.include_tasks: build.yml
  when: intel_qat_version.stdout != qat_driver_version

- name: Create qat_service systemd wrapper
  become: true
  ansible.builtin.copy:
    mode: preserve
    src: qat_service.service
    dest: /etc/systemd/system/qat_service.service
  when: ansible_os_family in ['ClearLinux', 'Suse']
  notify:
    - Start qat_service service

- name: Configure number of processes per qat device
  when: qat_plugin_mode == "kernel"
  block:
    - name: Get qat devices
      ansible.builtin.shell: >
        /usr/local/bin/adf_ctl status | grep up |
        awk '{print $4 substr($1, 4)}' | tr -d ','
      register: qat_devices
      changed_when: false
    - name: Ensure SHIM config section
      ansible.builtin.blockinfile:
        dest: "/etc/{{ item }}.conf"
        block: |
          [SHIM]
          NumberCyInstances = {{ shim.num_crypto_instances }}
          NumberDcInstances = {{ shim.num_decompression_instances }}
          NumProcesses = {{ shim.num_processes }}
          LimitDevAccess = {{ shim.limit_dev_access }}
          # Crypto - User instance #0
          Cy0Name = "UserCY0"
          Cy0IsPolled = 1
          # List of core affinities
          Cy0CoreAffinity = 0
      loop: "{{ qat_devices.stdout_lines }}"
    - name: Restart qat services
      ansible.builtin.command: /usr/local/bin/adf_ctl restart
      changed_when: false
