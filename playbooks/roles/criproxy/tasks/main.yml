---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2019
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- name: Get service status
  ansible.builtin.service_facts:
- name: Disable AppArmor in all nodes
  become: true
  ansible.builtin.service:
    name: apparmor
    state: stopped
    enabled: false
  when:
    - ansible_os_family == "Debian"
    - ansible_facts.services["apparmor.service"] is defined
- name: Disable SELinux in all nodes
  selinux:  # noqa fqcn
    state: disabled
  when:
    - ansible_os_family == "RedHat"
    - ansible_facts.services["selinux.service"] is defined
- name: Check that kubelet env file exists
  ansible.builtin.stat:
    path: /etc/kubernetes/kubelet.env
  register: criproxy_kubelet_env
- name: Print kubelet_env_stat value
  ansible.builtin.debug:
    var: criproxy_kubelet_env
- name: Create dockershim service
  become: true
  when:
    - criproxy_kubelet_env.stat.exists
    - ansible_facts.services["docker.service"] is defined
  block:
    - name: Remove leftovers
      ansible.builtin.file:
        path: /var/run/dockershim.sock
        state: absent
    - name: Get kubelet version
      ansible.builtin.shell: |
        set -o pipefail
        /usr/local/bin/kubelet --version | awk '{ gsub(/v/,""); print $2 }'
      args:
        executable: /bin/bash
      register: criproxy_current_kubelet_version
      changed_when: false
    - name: Print kubelet_version value
      ansible.builtin.debug:
        var: criproxy_current_kubelet_version
    - name: Stop if kubelet doesn't support --experimental-dockershim option
      ansible.builtin.assert:
        that: criproxy_current_kubelet_version.stdout is version('1.19', '<')
        msg: Kubelet has removed its Experimental Dockershim option. See https://github.com/kubernetes/kubernetes/commit/53adde65ce000c4d90ee8f807e90658426733a5
    - name: Create dockershim service
      ansible.builtin.copy:
        mode: '0644'
        src: dockershim.service
        dest: /etc/systemd/system/dockershim.service
    - name: Start dockershim service
      ansible.builtin.service:
        name: dockershim
        state: started
        enabled: true
      notify:
        - Restart criproxy service
    - name: Wait for dockershim socket to be created
      ansible.builtin.wait_for:
        path: "{{ criproxy_cri_socket_path }}"
        delay: 5
        timeout: 600
- name: Create CRIProxy binary folder
  ansible.builtin.file:
    mode: '0755'
    state: directory
    path: "{{ criproxy_dest }}"
- name: Check that criproxy binary exists
  ansible.builtin.stat:
    path: "{{ criproxy_dest }}/criproxy"
  register: criproxy_stat
- name: Print criproxy_stat value
  ansible.builtin.debug:
    var: criproxy_stat
- name: Download CRIproxy package
  ansible.builtin.get_url:
    url: "{{ criproxy_url }}"
    dest: "{{ criproxy_dest }}/criproxy"
    mode: '0755'
  when: not criproxy_stat.stat.exists
- name: Set criproxy execution permissions
  ansible.builtin.file:
    path: "{{ criproxy_dest }}/criproxy"
    mode: "+x"
- name: Recreate criproxy service
  become: true
  ansible.builtin.template:
    mode: preserve
    src: criproxy.service.j2
    dest: /etc/systemd/system/criproxy.service
- name: Start criproxy service
  become: true
  ansible.builtin.service:
    name: criproxy
    state: started
    enabled: true
- name: Modify args for kubelet service
  become: true
  ansible.builtin.lineinfile:
    mode: '0644'
    dest: /etc/kubernetes/kubelet.env
    insertafter: '^--pod-infra-container-image=*'
    line: |-
      --container-runtime=remote --container-runtime-endpoint=unix:///run/criproxy.sock \
      --image-service-endpoint=unix:///run/criproxy.sock --enable-controller-attach-detach=false \
    state: present
  when:
    - ansible_facts.services["kubelet.service"] is defined
    - ansible_facts.services["docker.service"] is defined
  notify:
    - Restart kubelet service
