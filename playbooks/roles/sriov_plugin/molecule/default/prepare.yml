---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

- name: Boostrap servers
  hosts: all
  vars:
    kind_dest: /usr/local/bin
  pre_tasks:
    - name: Install python3 packages
      become: true
      ansible.builtin.package:
        name: python3
        state: present
      when: ansible_os_family == "RedHat"
    - name: Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
  roles:
    - role: andrewrothstein.kind
      kind_install_dir: '{{ kind_dest }}'
    - andrewrothstein.kubectl
    - role: geerlingguy.docker
      docker_install_compose: false
      become: true
    - role: geerlingguy.pip
      become: true
      vars:
        pip_install_packages:
          - kubernetes==24.2.0
          - openshift==0.13.1
  tasks:
    - name: Add existing user ansible's user to docker's group
      become: true
      ansible.builtin.user:
        name: '{{ ansible_ssh_user }}'
        groups: docker
        append: true
    - name: Get k8s clusters
      ansible.builtin.command: '{{ kind_dest }}/kind get clusters --quiet'
      register: kind_cluster
      failed_when: ( kind_cluster.rc not in [ 0, 1 ] )
      changed_when: false
    - name: Print kind_cluster value
      ansible.builtin.debug:
        var: kind_cluster
    - name: Creating KinD cluster config
      ansible.builtin.copy:
        mode: preserve
        dest: "/tmp/kind-config.yml"
        content: |
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
            - role: control-plane
    - name: Create k8s cluster
      become: true
      ansible.builtin.command: '{{ kind_dest }}/kind create cluster --name molecule --config=/tmp/kind-config.yml --wait=300s'
      when: not 'molecule' in kind_cluster.stdout
    - name: Create kubeconfig folder
      ansible.builtin.file:
        mode: '0755'
        path: '{{ ansible_env.HOME }}/.kube/'
        state: directory
    - name: Copy kubeconfig root file
      become: true
      ansible.builtin.copy:
        mode: preserve
        src: /root/.kube/config
        dest: '{{ ansible_env.HOME }}/.kube/config'
        remote_src: true
        owner: '{{ ansible_ssh_user }}'
        group: '{{ ansible_ssh_user }}'
