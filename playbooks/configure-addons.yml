---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2019
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

- name: Install SR-IOV Network CNI
  hosts: localhost
  tags:
    - sriov
    - sriov-cni
  roles:
    - sriov_cni

- name: Install SR-IOV Network Device Plugin
  hosts: localhost
  tags:
    - sriov
    - sriov-plugin
  roles:
    - sriov_plugin

- name: Install Node Feature Discovery add-on
  hosts: localhost
  collections:
    - community.kubernetes
  tags: nfd
  roles:
    - nfd

- name: Label worker nodes with pmem devices
  hosts: all
  gather_facts: true
  tasks:
    - name: Check if pmem device exists
      ansible.builtin.stat:
        path: /dev/pmem0
      register: pmem_dev_check
    - name: Register PMEM server
      ansible.builtin.command: "/usr/local/bin/kubectl label node {{ ansible_hostname }} storage=pmem --overwrite"
      when: pmem_dev_check.stat.exists
      delegate_to: localhost

- name: Install Persistent Memory add-on
  hosts: localhost
  collections:
    - community.kubernetes
  pre_tasks:
    - name: Load krd variables
      ansible.builtin.include_vars:
        file: krd-vars.yml
  tags: pmem
  roles:
    - role: andrewrothstein.gcc-toolbox
    - pmem

- name: Install QuickAssist drivers
  hosts: qat-node
  become: true
  pre_tasks:
    - name: Load krd variables
      ansible.builtin.include_vars:
        file: krd-vars.yml
  tags:
    - qat
    - qat-driver
  roles:
    - role: geerlingguy.repo-epel
      when: ansible_os_family == 'RedHat'
    - qat_driver

- name: Build intel-qat-plugin in kerneldrv mode
  vars:
    qat_plugin_repo_folder: /tmp/intel-device-plugins-for-kubernetes
  hosts: kube-node
  tags:
    - qat
    - qat-plugin
  become: true
  tasks:
    - name: Load krd variables
      ansible.builtin.include_vars:
        file: krd-vars.yml
    - name: Configure docker client
      block:
        - name: Create docker config folder
          ansible.builtin.file:
            state: directory
            path: /root/.docker/
            mode: '0755'
        - name: Configure docker client to use proxy values
          ansible.builtin.copy:
            mode: preserve
            dest: "/root/.docker/config.json"
            content: |
              {
                "proxies":
                {
                  "default":
                  {
                    "httpProxy": "{{ lookup('env', 'http_proxy') }}",
                    "httpsProxy": "{{ lookup('env', 'https_proxy') }}",
                    "noProxy": "{{ lookup('env', 'no_proxy') }}"
                  }
                }
              }
      when: lookup('env', 'http_proxy') != "fooproxy" or lookup('env', 'https_proxy') != "fooproxy" or lookup('env', 'no_proxy') != "fooproxy"
    - name: Clone intel-qat-plugin repo
      ansible.builtin.git:
        repo: "https://github.com/intel/intel-device-plugins-for-kubernetes"
        dest: "{{ qat_plugin_repo_folder }}"
        version: "v{{ qat_plugin_version }}"
        force: true
      when: qat_plugin_mode == "kernel"
    - name: Remove old qat docker images
      ansible.builtin.shell: |
        set -o pipefail
        docker images intel-qat-plugin -q | xargs docker rmi -f
      args:
        executable: /bin/bash
      register: docker_rmi_result
      failed_when: "docker_rmi_result.rc != 0 and docker_rmi_result.rc != 123"
      when: qat_plugin_mode == "kernel"
    - name: Build docker image
      ansible.builtin.command: >
        docker build --build-arg TAGS_KERNELDRV=kerneldrv --pull
        -t intel/intel-qat-plugin:{{ qat_plugin_version }}
        -f {{ qat_plugin_repo_folder }}/build/docker/intel-qat-plugin.Dockerfile
        {{ qat_plugin_repo_folder }}/
      when: qat_plugin_mode == "kernel"

- name: Install QuickAssist Plugin
  hosts: localhost
  tags:
    - qat
    - qat-plugin
  roles:
    - qat_plugin
