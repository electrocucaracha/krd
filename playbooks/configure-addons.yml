---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2019
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- name: Install SR-IOV Network CNI
  hosts: localhost
  tags:
    - sriov
    - sriov-cni
  pre_tasks:
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
  roles:
    - sriov_cni
- name: Install SR-IOV Network Device Plugin
  hosts: localhost
  tags:
    - sriov
    - sriov-plugin
  pre_tasks:
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
  roles:
    - sriov_plugin
- name: Install Node Feature Discovery add-on
  hosts: localhost
  tags: nfd
  pre_tasks:
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
  roles:
    - nfd
- name: Label worker nodes with pmem devices
  hosts: all
  gather_facts: true
  tasks:
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
    - name: Check if pmem device exists
      ansible.builtin.stat:
        path: /dev/pmem0
      register: pmem_dev_check
    - name: Register PMEM server
      kubernetes.core.k8s:
        api_version: v1
        kind: Node
        name: "{{ ansible_hostname }}"
        resource_definition:
          metadata:
            labels:
              storage: pmem
      when: pmem_dev_check.stat.exists
- name: Install Persistent Memory add-on
  hosts: localhost
  pre_tasks:
    - name: Load krd variables
      ansible.builtin.include_vars:
        file: krd-vars.yml
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
  tags: pmem
  roles:
    - role: andrewrothstein.gcc-toolbox
    - pmem
- name: Install QuickAssist drivers
  hosts: qat-node
  become: true
  pre_tasks:
    - name: Load krd variables
      ansible.builtin.include_vars:
        file: krd-vars.yml
  tags:
    - qat
    - qat-driver
  roles:
    - role: geerlingguy.repo-epel
      when: ansible_os_family == 'RedHat'
    - qat_driver
- name: Build intel-qat-plugin in kerneldrv mode
  vars:
    qat_plugin_repo_folder: /tmp/intel-device-plugins-for-kubernetes
  hosts: kube_node
  tags:
    - qat
    - qat-plugin
  become: true
  tasks:
    - name: Build QAT docker images
      when:
        - qat_plugin_mode is defined
        - qat_plugin_mode == "kernel"
      block:
        - name: Load krd variables
          ansible.builtin.include_vars:
            file: krd-vars.yml
        - name: Configure docker client
          when: lookup('env', 'http_proxy') != "fooproxy" or lookup('env', 'https_proxy') != "fooproxy" or lookup('env', 'no_proxy') != "fooproxy"
          block:
            - name: Create docker config folder
              ansible.builtin.file:
                state: directory
                path: /root/.docker/
                mode: "0755"
            - name: Configure docker client to use proxy values
              ansible.builtin.copy:
                mode: preserve
                dest: "/root/.docker/config.json"
                content: |
                  {
                    "proxies":
                    {
                      "default":
                      {
                        "httpProxy": "{{ lookup('env', 'http_proxy') }}",
                        "httpsProxy": "{{ lookup('env', 'https_proxy') }}",
                        "noProxy": "{{ lookup('env', 'no_proxy') }}"
                      }
                    }
                  }
        - name: Clone intel-qat-plugin repo
          ansible.builtin.git:
            repo: "https://github.com/intel/intel-device-plugins-for-kubernetes"
            dest: "{{ qat_plugin_repo_folder }}"
            version: "v{{ qat_plugin_version }}"
            force: true
        - name: Install docker python package
          ansible.builtin.pip:
            name: docker
        - name: Get old qat docker images
          community.docker.docker_host_info:
            images: true
            images_filters:
              reference: intel-qat-plugin
          register: qat_plugin
        - name: Remove old qat docker images
          community.docker.docker_image:
            state: absent
            force_absent: true
            name: "{{ item }}"
          loop: "{{ qat_plugin.images }}"
        - name: Build docker image
          community.docker.docker_image:
            build:
              args:
                TAGS_KERNELDRV: kerneldrv
              dockerfile: "{{ qat_plugin_repo_folder }}/build/docker/intel-qat-plugin.Dockerfile"
              path: "{{ qat_plugin_repo_folder }}/"
              pull: true
            name: intel/intel-qat-plugin
            tag: "{{ qat_plugin_version }}"
- name: Install QuickAssist Plugin
  hosts: localhost
  tags:
    - qat
    - qat-plugin
  pre_tasks:
    - name: Remove the PyYAML package
      ansible.builtin.package:
        name: python3-yaml
        state: absent
      when: ansible_distribution == 'Ubuntu'
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name: kubernetes==32.0.1
  roles:
    - qat_plugin
