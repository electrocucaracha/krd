---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2024
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ubuntu-runner-deployer
spec:
  params:
    - name: release-version
      description: Ubuntu release version
      type: string
    - name: release-name
      description: Ubuntu release name
      type: string
    - name: runner-version
      description: GitHub tarball Runner version
      type: string
      default: 2.321.0
  tasks:
    - name: pull-ubuntu-img
      params:
        - name: manifest
          value: |
            apiVersion: cdi.kubevirt.io/v1beta1
            kind: DataVolume
            metadata:
              annotations:
                cdi.kubevirt.io/storage.bind.immediate.requested: "true"
              name: ubuntu-img-$(params.release-name)
            spec:
              pvc:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 35G
                volumeMode: Filesystem
              source:
                http:
                  url: https://cloud-images.ubuntu.com/minimal/releases/$(params.release-name)/release/ubuntu-$(params.release-version)-minimal-cloudimg-amd64.img
        - name: waitForSuccess
          value: "true"
        - name: allowReplace
          value: "true"
      taskRef:
        kind: Task
        name: modify-data-object
    - name: create-vm-runner-from-manifest
      params:
        - name: manifest
          value: |
            apiVersion: kubevirt.io/v1
            kind: VirtualMachine
            metadata:
              generateName: runner-vm-
            spec:
              terminationGracePeriodSeconds: 5
              running: true
              template:
                spec:
                  domain:
                    cpu:
                      cores: 4
                    resources:
                      requests:
                        memory: 16G
                    devices:
                      disks:
                        - name: rootdisk
                          disk:
                            bus: virtio
                        - name: cloudinitdrive
                          disk:
                            bus: virtio
                      interfaces:
                        - name: default
                          masquerade: {}
                  networks:
                    - name: default
                      pod: {}
                  volumes:
                    - name: rootdisk
                      dataVolume:
                        name: $(tasks.pull-ubuntu-img.results.name)
                    - name: cloudinitdrive
                      cloudInitConfigDrive:
                        userData: |-
                          #cloud-config
                          users:
                            - name: runner
                              sudo: ALL=(ALL) NOPASSWD:ALL
                          packages:
                            - git
                            - jq
                            - python3
                            - python3-dev
                            - python3-pip
                            - python3-venv
                            - rsync
                            - virtualbox-7.1
                            - vagrant
                          bootcmd:
                            - "sudo mkdir /opt/runner"
                            - "curl -sL https://github.com/actions/runner/releases/download/v$(params.runner-version)/actions-runner-linux-x64-$(params.runner-version).tar.gz | sudo tar -xz -C /opt/runner"
                          runcmd:
                            - "sudo ln -s /usr/bin/python3 /usr/bin/python"
                            - "sudo /opt/runner/bin/installdependencies.sh"
                            - "sudo chown -R runner: /opt/runner"
                            - "sudo runuser -l runner -c 'for box in community/rockylinux-9 generic/ubuntu2004 generic/ubuntu2204 debian/bullseye64 opensuse/Leap-15.6.x86_64 fedora/40-cloud-base; do vagrant box add --provider virtualbox $box; done'"
                          write_files:
                            - path: /etc/profile.d/vagrant.sh
                              content: |
                                export VAGRANT_DEFAULT_PROVIDER=virtualbox
                          power_state:
                            delay: now
                            mode: poweroff
                            message: Bootstrap completed
                            timeout: 1
                            condition: true
                          apt:
                            sources:
                              virtualbox:
                                source: "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $(params.release-name) contrib"
                                keyid: "B9F8D658297AF3EFC18D5CDFA2F683C52980AECF" #gitleaks:allow
                              hashicorp:
                                source: "deb [arch=amd64] https://apt.releases.hashicorp.com $(params.release-name) main"
                                keyid: "798AEC654E5C15428C8E42EEAA16FCBCA621E701" #gitleaks:allow
      runAfter:
        - pull-ubuntu-img
      taskRef:
        kind: Task
        name: create-vm-from-manifest
    - name: wait-for-runner-complete
      params:
        - name: vmiName
          value: "$(tasks.create-vm-runner-from-manifest.results.name)"
        - name: successCondition
          value: status.phase == Succeeded
        - name: failureCondition
          value: status.phase in (Failed, Unknown)
      runAfter:
        - create-vm-runner-from-manifest
      taskRef:
        kind: Task
        name: wait-for-vmi-status
  finally:
    - name: cleanup-vm-runner
      params:
        - name: vmName
          value: $(tasks.create-vm-runner-from-manifest.results.name)
        - name: delete
          value: true
      timeout: 10m
      taskRef:
        kind: Task
        name: cleanup-vm
  results:
    - name: ubuntu-data-volume
      description: Name of the created base DataVolume
      value: $(tasks.pull-ubuntu-img.results.name)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ubuntu-runner-deployer-role
rules:
  - apiGroups:
      - cdi.kubevirt.io
    resources:
      - datavolumes
      - datasources
    verbs:
      - get
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - delete
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachines
      - virtualmachineinstances
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - subresources.kubevirt.io
    resources:
      - virtualmachines/start
      - virtualmachines/stop
      - virtualmachines/restart
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubuntu-runner-deployer-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ubuntu-runner-deployer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ubuntu-runner-deployer-role
subjects:
  - kind: ServiceAccount
    name: ubuntu-runner-deployer-account
