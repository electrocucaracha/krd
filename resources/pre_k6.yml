---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2021
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-server-deployment
  namespace: k6
  labels:
    app: http-server
spec:
  replicas: 100
  selector:
    matchLabels:
      app: http-server
  template:
    metadata:
      labels:
        app: http-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: server
          image: nginx:1.14.2
          ports:
            - containerPort: 80
              name: server
---
apiVersion: v1
kind: Service
metadata:
  name: test
  namespace: k6
spec:
  selector:
    app: http-server
  ports:
    - protocol: TCP
      port: 8080
      targetPort: server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-config
  namespace: k6
data:
  config: |
    import http from "k6/http";
    import { check, sleep } from "k6";
    export let options = {
      vus: 1,
      duration: "1m"
    };
    export default function() {
      let res = http.get("http://test.k6.svc.cluster.local:8080");
      check(res, {
        "status was 200": (r) => r.status == 200,
        "transaction time OK": (r) => r.timings.duration < 200
      });
    };
